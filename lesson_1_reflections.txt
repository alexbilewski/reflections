How did viewing a diff between two versions of a file help you see the bug that was introduced?

I could see what was changed in a file, indicating the places where the mistake could have been made, norrowing the search area.
 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It will make it simpler to track changes and if needed revert to previos version or scrutenise mistakes.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google Docs does?

One is in control of saved code state, alowing to more precise history that helps with debuging. 


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

In project where there are multiple files most often they are conected (meaning they work togheter). So for programing version control is better to track all files, while on projects with single files Google doc is ok.


How can you use the commands git log and git diff to view the history of files?

git log can shaw the commits to files and git diff compare selected commits


How might using version control make you more confident to make changes that could break something?

I can always revert to previous version and check the differences easilly. 


Now that you have your workspace set up, what do you want to try using Git for?

no preferances